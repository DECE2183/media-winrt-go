// Code generated by winrt-go-gen. DO NOT EDIT.

//go:build windows

//nolint:all
package storage

import (
	"syscall"
	"unsafe"

	"github.com/go-ole/go-ole"
	"github.com/dece2183/media-winrt-go/windows/foundation"
)

const SignatureStorageFile string = "rc(Windows.Storage.StorageFile;{fa3f6186-4214-428c-a64c-14c9ac7315ea})"

type StorageFile struct {
	ole.IUnknown
}

const GUIDiStorageFileStatics string = "5984c710-daf2-43c8-8bb4-a4d3eacfd03f"
const SignatureiStorageFileStatics string = "{5984c710-daf2-43c8-8bb4-a4d3eacfd03f}"

type iStorageFileStatics struct {
	ole.IInspectable
}

type iStorageFileStaticsVtbl struct {
	ole.IInspectableVtbl

	StorageFileGetFileFromPathAsync                uintptr
	StorageFileGetFileFromApplicationUriAsync      uintptr
	StorageFileCreateStreamedFileAsync             uintptr
	StorageFileReplaceWithStreamedFileAsync        uintptr
	StorageFileCreateStreamedFileFromUriAsync      uintptr
	StorageFileReplaceWithStreamedFileFromUriAsync uintptr
}

func (v *iStorageFileStatics) VTable() *iStorageFileStaticsVtbl {
	return (*iStorageFileStaticsVtbl)(unsafe.Pointer(v.RawVTable))
}

func StorageFileGetFileFromPathAsync(path string) (*foundation.IAsyncOperation, error) {
	inspectable, err := ole.RoGetActivationFactory("Windows.Storage.StorageFile", ole.NewGUID(GUIDiStorageFileStatics))
	if err != nil {
		return nil, err
	}
	v := (*iStorageFileStatics)(unsafe.Pointer(inspectable))

	var out *foundation.IAsyncOperation
	pathHStr, err := ole.NewHString(path)
	if err != nil {
		return nil, err
	}
	hr, _, _ := syscall.SyscallN(
		v.VTable().StorageFileGetFileFromPathAsync,
		0,                             // this is a static func, so there's no this
		uintptr(pathHStr),             // in string
		uintptr(unsafe.Pointer(&out)), // out foundation.IAsyncOperation
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}
